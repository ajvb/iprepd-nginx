init_by_lua_block {
  client = require("resty.iprepd").new({
    url = os.getenv("IPREPD_URL"),
    api_key = os.getenv("IPREPD_API_KEY"),
    threshold = tonumber(os.getenv("IPREPD_REPUTATION_THRESHOLD")),
    cache_ttl = os.getenv("IPREPD_CACHE_TTL"),
    cache_buffer_count = tonumber(os.getenv("IPREPD_CACHE_BUFFER_COUNT")),
    timeout = tonumber(os.getenv("IPREPD_TIMEOUT")) or 10,
    cache_errors = tonumber(os.getenv("IPREPD_CACHE_ERRORS")),
    statsd_host = os.getenv("STATSD_HOST") or nil,
    statsd_port = tonumber(os.getenv("STATSD_PORT")) or 8125,
    statsd_max_buffer_count = tonumber(os.getenv("STATSD_MAX_BUFFER_COUNT")) or 100,
    statsd_flush_timer = tonumber(os.getenv("STATSD_FLUSH_TIMER")) or 5,
    blocking_mode = tonumber(os.getenv("BLOCKING_MODE")) or 0,
    verbose = tonumber(os.getenv("VERBOSE")) or 0,
    allowlist = os.getenv("IPREPD_ALLOWLIST"),
    audit_blocked_requests = tonumber(os.getenv("AUDIT_BLOCKED_REQUESTS")) or 0,
    audit_include_headers = tonumber(os.getenv("AUDIT_INCLUDE_HEADERS")) or 0,
    audit_uri_list = os.getenv("AUDIT_URI_LIST"),
  })
}

init_worker_by_lua_block {
  client:config_flush_timer()
}

server {
  listen       80;
  root         /dev/null;
  error_page   500 502 503 504  /50x.html;

  location = /50x.html {
    root  /usr/local/openresty/nginx/html/;
  }

  location = /health {
    return 200;
    access_log off;
  }

  set_by_lua_block $backend { return os.getenv("backend") }

  location / {
    proxy_set_header "X-Forwarded-Port" $server_port;
    proxy_set_header "X-Forwarded-For" $proxy_add_x_forwarded_for;
    proxy_set_header "X-Real-IP" $remote_addr;
    proxy_set_header "Host" $host;
    proxy_pass $backend;

    # Alias a test endpoint that can be used to test iprepd-nginx behavior
    # without a backend
    location /iprepd_ping {
      access_by_lua_block {
          client:check(ngx.var.remote_addr)
      }
      alias /opt/iprepd-nginx/etc/iprepd-nginx-ping.txt;
    }

    access_by_lua_block {
      client:check(ngx.var.remote_addr)
    }

    log_by_lua_block {
      if client.statsd then
        client.statsd.set("iprepd.ips_seen", ngx.var.remote_addr)
      end
    }
  }
}
